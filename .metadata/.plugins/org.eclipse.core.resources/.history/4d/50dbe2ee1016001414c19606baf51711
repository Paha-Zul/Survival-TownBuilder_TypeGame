package com.mygdx.game.screens

import com.badlogic.gdx.Screen
import com.mygdx.game.SpaceGame
import com.badlogic.gdx.graphics.OrthographicCamera
import com.badlogic.gdx.Gdx
import com.mygdx.game.utility.GridScala
import com.mygdx.game.utility.ListHolder
import com.badlogic.gdx.graphics.GL20

class GameScreenScala(val game : SpaceGame) extends Screen{
	
	val batch = game.batch;
	val camera = new OrthographicCamera();
	
	camera.setToOrtho(false, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
	
	GridScala.initGrid(10,10,100,100);
	
	ListHolder.initListHolder();
	
	
	override def render(delta : Float) : Unit = {
		Gdx.gl.glClearColor(1, 1, 0, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		camera.update();
		batch.begin();

		for(int i=0;i<ListHolder.maxNumLevels;i++){
			Iterator<Entity> iter = ListHolder.getEntityList(i).iterator();
	
			while (iter.hasNext()) {
				Entity ent = iter.next();
				if (ent.isDestroyed()) {
					iter.remove();
					continue;
				}
	
				ent.update(delta); // Call normal update.
				ent.render(batch);
			}
		}
	}
	
	def loadResources() = {
		
	}
}